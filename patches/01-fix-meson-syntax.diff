# Update the syntax of the meson files and update code to the last version

diff --git a/data/meson.build b/data/meson.build
index 8142127..edb8583 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -5,24 +5,22 @@ install_data ('icons' / 'hicolor' / 'scalable' / 'org.gnome.Mahjongg.svg',
 install_data ('icons' / 'hicolor' / 'symbolic' / 'org.gnome.Mahjongg-symbolic.svg',
               install_dir: hicolordir / 'symbolic' / 'apps')
 
-schemasdir = gio_dep.get_pkgconfig_variable(
-  'schemasdir',
-  define_variable : [
-    'datadir',
-    get_option('datadir')
-  ]
+schemasdir = gio_dep.get_variable(
+  pkgconfig: 'schemasdir',
+  pkgconfig_define: ['datadir', get_option('datadir')],
+  default_value: join_paths(get_option('datadir'), 'glib-2.0/schemas'),
 )
-
 install_data ('org.gnome.Mahjongg.gschema.xml',
-              install_dir: schemasdir)
+  install_dir: schemasdir
+)
 
 install_data ('mahjongg.map', install_dir: join_paths (pkgdatadir, 'maps'))
 install_data ('postmodern.svg', install_dir: join_paths (pkgdatadir, 'themes'))
 install_data ('smooth.png', install_dir: join_paths (pkgdatadir, 'themes'))
 install_data ('edu_kang_xi.png', install_dir: join_paths (pkgdatadir, 'themes'))
+install_data ('maya.png', install_dir: join_paths (pkgdatadir, 'themes'))
 
 desktop_file = i18n.merge_file (
-  'desktop-file',
   input:       'org.gnome.Mahjongg.desktop.in',
   output:      'org.gnome.Mahjongg.desktop',
   install:     true,
@@ -42,7 +40,7 @@ if desktop_file_validate.found()
   )
 endif
 
-appdata_file = i18n.merge_file ('appdata-file',
+appdata_file = i18n.merge_file (
                  input: 'org.gnome.Mahjongg.appdata.xml.in',
                  output: 'org.gnome.Mahjongg.appdata.xml',
                  install: true,
@@ -64,17 +62,21 @@ resources = gnome.compile_resources ('resources', 'org.gnome.Mahjongg.gresource.
                                      source_dir: '.',
                                      c_name: 'resources')
 
-# Compile GSettings schemas
+gnome.post_install(
+  glib_compile_schemas: true,
+  gtk_update_icon_cache: true,
+)
 
-if get_option('compile-schemas').enabled()
-  compileschemas = gio_dep.get_pkgconfig_variable('glib_compile_schemas')
-  meson.add_install_script(compileschemas, get_option('prefix') / schemasdir)
-endif
+# Make D-Bus activatable
+service_conf = configuration_data()
+service_conf.set('bindir', bindir)
 
-# Rebuild icon cache
+service = 'org.gnome.Mahjongg.service'
 
-if get_option('update-icon-cache').enabled()
-  updateiconcache = find_program('gtk-update-icon-cache')
-  meson.add_install_script(updateiconcache.path(), '-t', '-f', get_option('prefix') / hicolordir / 'scalable')
-  meson.add_install_script(updateiconcache.path(), '-t', '-f', get_option('prefix') / hicolordir / 'symbolic')
-endif
+configure_file (
+  input: service + '.in',
+  output: service,
+  install: true,
+  install_dir: join_paths (datadir, 'dbus-1', 'services'),
+  configuration: service_conf
+)
diff --git a/help/meson.build b/help/meson.build
index 8adcc61..e92cc39 100644
--- a/help/meson.build
+++ b/help/meson.build
@@ -27,9 +27,8 @@ gnome.yelp ('gnome-mahjongg',
                      'figures/layout-tic-tac-toe.png',
                      'figures/layout-overpass.png',
                      'figures/layout-ziggurat.png',
-                     'figures/logo32.png',
-                     'figures/logo.png',
                      'figures/mahjongg-video.ogv',
+                     'figures/org.gnome.Mahjongg.svg',
                      'figures/yellow-symbol.png',
                      'figures/black-symbol.png' ],
             symlink_media: true)
diff --git a/meson.build b/meson.build
index af43999..27e3b29 100644
--- a/meson.build
+++ b/meson.build
@@ -5,22 +5,24 @@
              'warning_level=1',
              'buildtype=debugoptimized',
          ],
-         meson_version: '>= 0.49.0')
+         meson_version: '>= 0.57.0')
 
 gnome = import ('gnome')
 i18n = import ('i18n')
 
 # Paths
-mandir     = get_option ('prefix') / get_option ('mandir')
-localedir  = get_option ('prefix') / get_option ('localedir')
-datadir    = get_option ('prefix') / get_option ('datadir')
-pkgdatadir = datadir / 'gnome-mahjongg'
+mandir      = join_paths (get_option ('prefix'), get_option ('mandir'))
+localedir   = join_paths (get_option ('prefix'), get_option ('localedir'))
+datadir     = join_paths (get_option ('prefix'), get_option ('datadir'))
+pkgdatadir  = join_paths (datadir, 'gnome-mahjongg')
+bindir      = join_paths (get_option ('prefix'), get_option ('bindir'))
 
 # Dependencies
 glib_dep    = dependency ('glib-2.0', version: '>= 2.40.0')
 gio_dep     = dependency ('gio-2.0', version: '>= 2.40.0')
-gtk_dep     = dependency ('gtk+-3.0', version: '>= 3.13.2')
-librsvg_dep = dependency ('librsvg-2.0', version: '>= 2.32.0')
+gtk_dep     = dependency ('gtk4', version: '>= 4.5.0')
+adwaita_dep = dependency ('libadwaita-1')
+librsvg_dep = dependency ('librsvg-2.0', version: '>= 2.46.0')
 
 subdir ('po')
 subdir ('data')
diff --git a/meson_options.txt b/meson_options.txt
deleted file mode 100644
index e9f7a85..0000000
--- a/meson_options.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-option('compile-schemas', type: 'feature', value : 'enabled', description : 'Compile GSettings schemas on install')
-option('update-icon-cache', type: 'feature', value : 'enabled', description : 'Update icon cache')
diff --git a/src/meson.build b/src/meson.build
index 4227c3a..6170dde 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -9,12 +9,15 @@ gnome_mahjongg = executable (
     'gnome-mahjongg.vala',
     'history.vala',
     'map.vala',
-    'score-dialog.vala'
+    'score-dialog.vala',
+    'window.vala',
+    'preferences.vala',
   ],
   dependencies: [
     glib_dep,
     gtk_dep,
-    librsvg_dep
+    adwaita_dep,
+    librsvg_dep,
   ],
   vala_args: [ '--pkg=posix' ],
   c_args: [
diff --git a/data/help-overlay.ui b/data/help-overlay.ui
index 525a392..afc63dc 100644
--- a/data/help-overlay.ui
+++ b/data/help-overlay.ui
@@ -8,19 +8,22 @@
         <property name="visible">1</property>
         <child>
           <object class="GtkShortcutsGroup">
-            <property name="title" translatable="yes" context="shortcut window">General</property>
+            <!-- Translators: title of a section in the Keyboard Shortcuts window; contains "Start a new game", "Pause the game", "Undo"... -->
+            <property name="title" translatable="yes" context="shortcut window">Main functions</property>
             <property name="visible">1</property>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
                 <property name="accelerator">&lt;Ctrl&gt;N</property>
+                <!-- Translators: Ctrl-N shortcut description in the Keyboard Shortcuts dialog, section "Main functions"; discard current game and start a new one -->
                 <property name="title" translatable="yes" context="shortcut window">Start a new game</property>
               </object>
             </child>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
-                <property name="accelerator">Pause</property>
+                <property name="accelerator">&lt;Ctrl&gt;P Pause</property>
+                <!-- Translators: Ctrl-P (or Pause) shortcut description in the Keyboard Shortcuts dialog, section "Main functions"; pause the current game -->
                 <property name="title" translatable="yes" context="shortcut window">Pause the game</property>
               </object>
             </child>
@@ -28,6 +31,7 @@
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
                 <property name="accelerator">&lt;Ctrl&gt;Z</property>
+                <!-- Translators: Ctrl-Z shortcut description in the Keyboard Shortcuts dialog, section "Main functions"; undo last move (if any) in the current game -->
                 <property name="title" translatable="yes" context="shortcut window">Undo</property>
               </object>
             </child>
@@ -35,48 +39,63 @@
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
                 <property name="accelerator">&lt;Shift&gt;&lt;Ctrl&gt;Z</property>
+                <!-- Translators: Shift-Ctrl-Z shortcut description in the Keyboard Shortcuts dialog, section "Main functions"; redo last undone move (if any) in the current game -->
                 <property name="title" translatable="yes" context="shortcut window">Redo</property>
               </object>
             </child>
-            <child>
-              <object class="GtkShortcutsShortcut">
-                <property name="visible">0</property>
-                <property name="accelerator">F11</property>
-                <property name="title" translatable="yes" context="shortcut window">Fullscreen</property> <!-- TODO implement? or not -->
-              </object>
-            </child>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
-                <property name="accelerator">&lt;Ctrl&gt;Q</property>
-                <property name="title" translatable="yes" context="shortcut window">Quit</property>
+                <property name="accelerator">&lt;Ctrl&gt;H</property>
+                <!-- Translators: Ctrl-H shortcut description in the Keyboard Shortcuts dialog, section "Main functions"; highlight two matching tiles -->
+                <property name="title" translatable="yes" context="shortcut window">Show a hint</property>
               </object>
             </child>
           </object>
         </child>
         <child>
           <object class="GtkShortcutsGroup">
-            <property name="title" translatable="yes" context="shortcut window">Help</property>
+            <!-- Translators: title of a section in the Keyboard Shortcuts window; contains "Show Keyboard Shortcuts", "Show Help", "Quit"... -->
+            <property name="title" translatable="yes" context="shortcut window">Generic</property>
             <property name="visible">1</property>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
-                <property name="accelerator">&lt;Ctrl&gt;H</property>
-                <property name="title" translatable="yes" context="shortcut window">Show a hint</property>
+                <property name="accelerator">F10</property>
+                <!-- Translators: F10 shortcut description in the Keyboard Shortcuts dialog, section Generic; show the main ("hamburger") menu -->
+                <property name="title" translatable="yes" context="shortcut window">Toggle main menu</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkShortcutsShortcut">
+                <property name="visible">1</property>
+                <property name="accelerator">&lt;Primary&gt;question</property>
+                <!-- Translators: Alt-? shortcut description in the Keyboard Shortcuts dialog, section "Generic"; show a window describing keyboard shortcuts -->
+                <property name="title" translatable="yes" context="shortcut window">Show Keyboard Shortcuts</property>
               </object>
             </child>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
                 <property name="accelerator">F1</property>
+                <!-- Translators: F1 shortcut description in the Keyboard Shortcuts dialog, section "Generic"; open the application help -->
                 <property name="title" translatable="yes" context="shortcut window">Show Help</property>
               </object>
             </child>
+            <child>
+              <object class="GtkShortcutsShortcut">
+                <property name="visible">0</property> <!-- TODO implement? or not -->
+                <property name="accelerator">F11</property>
+                <!-- Translators: action of an unimplemented shortcut that would appear in the Keyboard Shortcuts dialog, section "Generic"; makes the window (un)fullscreen -->
+                <property name="title" translatable="yes" context="shortcut window">Fullscreen</property>
+              </object>
+            </child>
             <child>
               <object class="GtkShortcutsShortcut">
                 <property name="visible">1</property>
-                <property name="accelerator">&lt;Primary&gt;question</property>
-                <property name="title" translatable="yes" context="shortcut window">Show Keyboard Shortcuts</property> <!-- TODO reimplement &lt;Primary&gt;F1 ? or not -->
+                <property name="accelerator">&lt;Ctrl&gt;Q</property>
+                <!-- Translators: Ctrl-Q shortcut description in the Keyboard Shortcuts dialog, section "Generic"; close the window and quit application -->
+                <property name="title" translatable="yes" context="shortcut window">Quit</property>
               </object>
             </child>
           </object>
diff --git a/data/icons/question-round-symbolic.svg b/data/icons/question-round-symbolic.svg
new file mode 100644
index 0000000..06a653d
--- /dev/null
+++ b/data/icons/question-round-symbolic.svg
@@ -0,0 +1,150 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg height="16px" viewBox="0 0 16 16" width="16px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+    <filter id="a" height="100%" width="100%" x="0%" y="0%">
+        <feColorMatrix in="SourceGraphic" type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0"/>
+    </filter>
+    <mask id="b">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.3"/>
+        </g>
+    </mask>
+    <clipPath id="c">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="d">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="e">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="f">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="g">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="h">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="i">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="j">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="k">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="l">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="m">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="n">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.05"/>
+        </g>
+    </mask>
+    <clipPath id="o">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="p">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.3"/>
+        </g>
+    </mask>
+    <clipPath id="q">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="r">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.5"/>
+        </g>
+    </mask>
+    <clipPath id="s">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="t">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.4"/>
+        </g>
+    </mask>
+    <clipPath id="u">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="v">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.4"/>
+        </g>
+    </mask>
+    <clipPath id="w">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="x">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.5"/>
+        </g>
+    </mask>
+    <clipPath id="y">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <mask id="z">
+        <g filter="url(#a)">
+            <path d="m 0 0 h 16 v 16 h -16 z" fill-opacity="0.5"/>
+        </g>
+    </mask>
+    <clipPath id="A">
+        <path d="m 0 0 h 1024 v 800 h -1024 z"/>
+    </clipPath>
+    <g clip-path="url(#c)" mask="url(#b)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 562.460938 212.058594 h 10.449218 c -1.183594 0.492187 -1.296875 2.460937 0 3 h -10.449218 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#e)" mask="url(#d)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 16 632 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#g)" mask="url(#f)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 17 631 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#i)" mask="url(#h)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 18 634 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#k)" mask="url(#j)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 16 634 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#m)" mask="url(#l)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 17 635 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#o)" mask="url(#n)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 19 635 h 1 v 1 h -1 z m 0 0" fill="#2e3436" fill-rule="evenodd"/>
+    </g>
+    <g clip-path="url(#q)" mask="url(#p)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 136 660 v 7 h 7 v -7 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#s)" mask="url(#r)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 199 642 h 3 v 12 h -3 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#u)" mask="url(#t)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 209.5 144.160156 c 0.277344 0 0.5 0.222656 0.5 0.5 v 1 c 0 0.277344 -0.222656 0.5 -0.5 0.5 s -0.5 -0.222656 -0.5 -0.5 v -1 c 0 -0.277344 0.222656 -0.5 0.5 -0.5 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#w)" mask="url(#v)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 206.5 144.160156 c 0.277344 0 0.5 0.222656 0.5 0.5 v 1 c 0 0.277344 -0.222656 0.5 -0.5 0.5 s -0.5 -0.222656 -0.5 -0.5 v -1 c 0 -0.277344 0.222656 -0.5 0.5 -0.5 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#y)" mask="url(#x)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 229.5 143.160156 c -0.546875 0 -1 0.457032 -1 1 c 0 0.546875 0.453125 1 1 1 s 1 -0.453125 1 -1 c 0 -0.542968 -0.453125 -1 -1 -1 z m 0 0" fill="#2e3436"/>
+    </g>
+    <g clip-path="url(#A)" mask="url(#z)" transform="matrix(1 0 0 1 -20 -60)">
+        <path d="m 226.453125 143.160156 c -0.519531 0 -0.953125 0.433594 -0.953125 0.953125 v 0.09375 c 0 0.519531 0.433594 0.953125 0.953125 0.953125 h 0.09375 c 0.519531 0 0.953125 -0.433594 0.953125 -0.953125 v -0.09375 c 0 -0.519531 -0.433594 -0.953125 -0.953125 -0.953125 z m 0 0" fill="#2e3436"/>
+    </g>
+    <path d="m 8 1 c -3.867188 0 -7 3.132812 -7 7 s 3.132812 7 7 7 s 7 -3.132812 7 -7 s -3.132812 -7 -7 -7 z m 0.152344 2.007812 c 0.726562 0.035157 1.433594 0.335938 1.96875 0.871094 c 0.855468 0.855469 1.113281 2.152344 0.648437 3.269532 c -0.328125 0.796874 -0.984375 1.390624 -1.769531 1.671874 v 1.179688 h -2 v -2 c 0 -0.550781 0.449219 -1 1 -1 c 0.40625 0 0.769531 -0.242188 0.921875 -0.617188 c 0.15625 -0.375 0.074219 -0.800781 -0.214844 -1.089843 c -0.289062 -0.289063 -0.714843 -0.371094 -1.089843 -0.214844 c -0.375 0.152344 -0.617188 0.515625 -0.617188 0.921875 h -2 c 0 -1.210938 0.734375 -2.308594 1.851562 -2.769531 c 0.417969 -0.175781 0.863282 -0.246094 1.300782 -0.222657 z m -0.152344 7.992188 c 0.550781 0 1 0.449219 1 1 s -0.449219 1 -1 1 s -1 -0.449219 -1 -1 s 0.449219 -1 1 -1 z m 0 0" fill="#2e3436"/>
+</svg>
diff --git a/data/org.gnome.Mahjongg.appdata.xml.in b/data/org.gnome.Mahjongg.appdata.xml.in
index 2a14dc9..bceab91 100644
--- a/data/org.gnome.Mahjongg.appdata.xml.in
+++ b/data/org.gnome.Mahjongg.appdata.xml.in
@@ -23,12 +23,12 @@
   </description>
   <screenshots>
     <screenshot height="524" width="972" type="default">
-      <image>https://people.gnome.org/~mcatanzaro/gnome-mahjongg.png</image>
+      <image>https://gitlab.gnome.org/GNOME/gnome-mahjongg/-/raw/master/data/screenshot.png</image>
     </screenshot>
   </screenshots>
   <releases>
     <!-- should be kept in versionning inverted order -->
     <release version="3.38.3" date="2020-11-01" type="stable" urgency="medium"/>
   ​  <!-- release version="3.35.91" date="2020-02-15" type="development" urgency="low"/ -->
   </releases>
   <launchable type="desktop-id">org.gnome.Mahjongg.desktop</launchable>
diff --git a/data/org.gnome.Mahjongg.desktop.in b/data/org.gnome.Mahjongg.desktop.in
index 483ae02..410d69d 100644
--- a/data/org.gnome.Mahjongg.desktop.in
+++ b/data/org.gnome.Mahjongg.desktop.in
@@ -10,3 +10,4 @@ Terminal=false
 Type=Application
 Categories=GNOME;GTK;Game;BoardGame;
 StartupNotify=true
+DBusActivatable=true
diff --git a/data/org.gnome.Mahjongg.gresource.xml b/data/org.gnome.Mahjongg.gresource.xml
index 0f95661..8999864 100644
--- a/data/org.gnome.Mahjongg.gresource.xml
+++ b/data/org.gnome.Mahjongg.gresource.xml
@@ -3,4 +3,11 @@
   <gresource prefix="/org/gnome/Mahjongg/gtk">
     <file preprocess="xml-stripblanks" compressed="true">help-overlay.ui</file>
   </gresource>
+  <gresource prefix="/org/gnome/Mahjongg">
+    <file>ui/window.ui</file>
+    <file>ui/preferences.ui</file>
+    <file>ui/score-dialog.ui</file>
+    <file alias="icons/scalable/actions/question-round-symbolic.svg" preprocess="xml-stripblanks">icons/question-round-symbolic.svg</file>
+    <file>style.css</file>
+  </gresource>
 </gresources>
diff --git a/data/org.gnome.Mahjongg.service.in b/data/org.gnome.Mahjongg.service.in
new file mode 100644
index 0000000..983a524
--- /dev/null
+++ b/data/org.gnome.Mahjongg.service.in
@@ -0,0 +1,3 @@
+[D-BUS Service]
+Name=org.gnome.Mahjongg
+Exec=@bindir@/gnome-mahjongg --gapplication-service
diff --git a/data/style.css b/data/style.css
new file mode 100644
index 0000000..07826e5
--- /dev/null
+++ b/data/style.css
@@ -0,0 +1,3 @@
+.mainview {
+  background: none;
+}
diff --git a/data/ui/preferences.ui b/data/ui/preferences.ui
new file mode 100644
index 0000000..42856b4
--- /dev/null
+++ b/data/ui/preferences.ui
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <template class="PreferencesWindow" parent="AdwPreferencesWindow">
+    <property name="default-height">-1</property>
+    <property name="default-width">-1</property>
+    <property name="search-enabled">false</property>
+    <child>
+      <object class="AdwPreferencesPage">
+        <child>
+          <object class="AdwPreferencesGroup">
+            <child>
+              <object class="AdwComboRow" id="themes_row">
+                <property name="title" translatable="yes">Theme</property>
+              </object>
+            </child>
+            <child>
+              <object class="AdwComboRow" id="layout_row">
+                <property name="title" translatable="yes">Layout</property>
+              </object>
+            </child>
+            <child>
+              <object class="AdwActionRow">
+                <property name="title" translatable="yes">Background color</property>
+                <child>
+                  <object class="GtkColorButton" id="background_btn">
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+</interface>
diff --git a/data/ui/score-dialog.ui b/data/ui/score-dialog.ui
new file mode 100644
index 0000000..74c3f38
--- /dev/null
+++ b/data/ui/score-dialog.ui
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <template class="ScoreDialog" parent="GtkDialog">
+    <property name="use-header-bar">1</property>
+    <property name="deletable">false</property>
+    <child internal-child="content_area">
+      <object class="GtkBox">
+        <property name="margin-top">12</property>
+        <property name="margin-bottom">12</property>
+        <property name="margin-start">12</property>
+        <property name="margin-end">12</property>
+        <property name="orientation">vertical</property>
+        <property name="spacing">6</property>
+        <child>
+          <object class="GtkBox">
+            <property name="halign">center</property>
+            <property name="spacing">6</property>
+            <child>
+              <object class="GtkLabel">
+                <property name="label" translatable="yes">Layout: </property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkComboBox" id="layouts">
+              </object>
+            </child>
+          </object>
+        </child>
+        <child>
+          <object class="GtkScrolledWindow">
+            <child>
+              <object class="GtkTreeView" id="scores">
+                <property name="vexpand">true</property>
+              </object>
+            </child>
+            <style>
+              <class name="frame"/>
+            </style>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+</interface>
diff --git a/data/ui/window.ui b/data/ui/window.ui
new file mode 100644
index 0000000..fbd139b
--- /dev/null
+++ b/data/ui/window.ui
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <template class="MahjonggWindow" parent="GtkApplicationWindow">
+    <child type="titlebar">
+      <object class="AdwHeaderBar">
+        <property name="title-widget">
+          <object class="AdwWindowTitle" id="titlewidget">
+            <style>
+              <class name="numeric"/>
+            </style>
+          </object>
+        </property>
+        <child type="start">
+          <object class="GtkButton">
+            <property name="icon-name">edit-undo-symbolic</property>
+            <property name="action-name">app.undo</property>
+          </object>
+        </child>
+        <child type="start">
+          <object class="GtkButton">
+            <property name="icon-name">edit-redo-symbolic</property>
+            <property name="action-name">app.redo</property>
+          </object>
+        </child>
+        <child type="end">
+          <object class="GtkMenuButton">
+            <property name="icon-name">open-menu-symbolic</property>
+            <property name="menu-model">menu</property>
+            <property name="primary">true</property>
+          </object>
+        </child>
+        <child type="end">
+          <object class="GtkButton">
+            <property name="icon-name">question-round-symbolic</property>
+            <property name="action-name">app.hint</property>
+          </object>
+        </child>
+        <child type="end">
+          <object class="GtkButton" id="pause_btn">
+            <property name="icon-name">media-playback-pause-symbolic</property>
+            <property name="action-name">app.pause</property>
+          </object>
+        </child>
+      </object>
+    </child>
+    <style>
+      <class name="mainview"/>
+    </style>
+  </template>
+  <menu id="menu">
+    <section>
+      <item>
+        <attribute name="label" translatable="yes">New Game</attribute>
+        <attribute name="action">app.new-game</attribute>
+      </item>
+      <item>
+        <attribute name="label" translatable="yes">Restart Game</attribute>
+        <attribute name="action">app.restart-game</attribute>
+      </item>
+      <item>
+        <attribute name="label" translatable="yes">Scores</attribute>
+        <attribute name="action">app.scores</attribute>
+      </item>
+    </section>
+    <section>
+      <item>
+        <attribute name="label" translatable="yes">Preferences</attribute>
+        <attribute name="action">app.preferences</attribute>
+      </item>
+      <item>
+        <attribute name="label" translatable="yes">Keyboard Shortcuts</attribute>
+        <attribute name="action">win.show-help-overlay</attribute>
+      </item>
+      <item>
+        <attribute name="label" translatable="yes">Help</attribute>
+        <attribute name="action">app.help</attribute>
+      </item>
+      <item>
+        <attribute name="label" translatable="yes">About Mahjongg</attribute>
+        <attribute name="action">app.about</attribute>
+      </item>
+    </section>
+  </menu>
+</interface>
diff --git a/flatpak/org.gnome.Mahjongg.json b/flatpak/org.gnome.Mahjongg.json
new file mode 100644
index 0000000..29320d4
--- /dev/null
+++ b/flatpak/org.gnome.Mahjongg.json
@@ -0,0 +1,29 @@
+{
+    "app-id" : "org.gnome.Mahjongg",
+    "runtime" : "org.gnome.Platform",
+    "sdk" : "org.gnome.Sdk",
+    "runtime-version" : "master",
+    "command" : "gnome-mahjongg",
+    "finish-args" : [
+        "--share=ipc",
+        "--socket=fallback-x11",
+        "--socket=wayland",
+        "--device=dri",
+        "--share=network"
+    ],
+    "modules" : [
+        {
+            "name" : "gnome-mahjongg",
+            "buildsystem" : "meson",
+            "sources" : [
+                {
+                    "type" : "git",
+                    "url" : "https://gitlab.gnome.org/GNOME/gnome-mahjongg.git"
+                }
+            ]
+        }
+    ],
+    "cleanup" : [
+        "/share/man"
+    ]
+}
diff --git a/flatpak/org.gnome.Mahjongg.yaml b/flatpak/org.gnome.Mahjongg.yaml
deleted file mode 100644
index 57c35a6..0000000
--- a/flatpak/org.gnome.Mahjongg.yaml
+++ /dev/null
@@ -1,25 +0,0 @@
-app-id: org.gnome.Mahjongg
-runtime: org.gnome.Platform
-sdk: org.gnome.Sdk
-runtime-version: 'master'
-command: gnome-mahjongg
-
-finish-args:
-  - --share=ipc
-  - --socket=x11
-  - --socket=wayland
-  - --device=dri
-  - --filesystem=xdg-run/dconf
-  - --filesystem=~/.config/dconf:ro
-  - --talk-name=ca.desrt.dconf
-  - --env=DCONF_USER_CONFIG_DIR=.config/dconf
-
-modules:
-  - name: gnome-mahjongg
-    buildsystem: meson
-    sources:
-        - type: git
-          url: https://gitlab.gnome.org/GNOME/gnome-mahjongg.git
-
-cleanup:
-  - "/share/man"
diff --git a/help/C/figures/org.gnome.Mahjongg.svg b/help/C/figures/org.gnome.Mahjongg.svg
new file mode 100644
index 0000000..e5f428a
--- /dev/null
+++ b/help/C/figures/org.gnome.Mahjongg.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="128" height="128" version="1.0"><defs><linearGradient id="a"><stop offset="0" stop-color="#f7c54c"/><stop offset=".03" stop-color="#f9f06b"/><stop offset=".057" stop-color="#f5e35a" stop-opacity=".996"/><stop offset=".126" stop-color="#e5a50a" stop-opacity=".984"/><stop offset=".416" stop-color="#ebb517" stop-opacity=".984"/><stop offset=".455" stop-color="#f2cf65" stop-opacity=".984"/><stop offset=".494" stop-color="#c09610" stop-opacity=".984"/><stop offset=".494" stop-color="#f4d676" stop-opacity=".988"/><stop offset=".532" stop-color="#f4d87a" stop-opacity=".988"/><stop offset=".593" stop-color="#eec01e" stop-opacity=".988"/><stop offset=".877" stop-color="#f6d32d"/><stop offset=".954" stop-color="#f9f06b"/><stop offset="1" stop-color="#e5a50a" stop-opacity=".933"/></linearGradient><linearGradient xlink:href="#a" id="c" x1="12.098" y1="281.262" x2="117.203" y2="281.262" gradientUnits="userSpaceOnUse"/><linearGradient xlink:href="#a" id="b" gradientUnits="userSpaceOnUse" x1="12.098" y1="281.262" x2="117.203" y2="281.262"/></defs><g transform="translate(0 -172)"><rect style="marker:none" width="52" height="92" x="12" y="196" rx="8" ry="8" fill="url(#b)"/><rect ry="8" rx="8" y="196" x="64" height="92" width="52" style="marker:none" fill="url(#c)"/><rect ry="8" rx="8" y="184" x="12" height="94" width="52" style="marker:none" fill="#f9f06b"/><rect style="marker:none" width="52" height="94" x="64" y="184" rx="8" ry="8" fill="#f9f06b"/><g fill="#e5a50a"><path d="M38.5 213l-2.125 1.875.25 32.25c0 1.19 1.125 2.375 1.125 2.375l3.125-2.25s-1.5-.93-1.5-2z" style="marker:none"/><path d="M21.688 220.625l2.25 3h28.75l-4.407-4.406-2.125 2.125zM27.438 226l.125 14.125 3.187-1.625v-10.938zM44.063 224.375L49 227l-2.063 1.25v7.063l.938 1.062-2.313 2.313-1.374-2.125z" style="marker:none"/><rect ry=".63" rx=".63" y="227.375" x="28.563" height="1.563" width="17.75" style="marker:none"/><rect style="marker:none" width="17.75" height="1.563" x="28.563" y="231.438" rx=".63" ry=".63"/><rect ry=".63" rx=".63" y="235.063" x="28.563" height="1.563" width="17.75" style="marker:none"/><path style="marker:none" d="M22 241.313l3.938 3.937 1.687-1.438h27.75l-4.406-4.406-2.125 2.125z"/></g><g fill="#e5a50a"><path d="M87.75 214.75c0 10.901-.548 19.874-11.625 26.5l.438 2.688C85.195 239.841 90 232.93 90 220.75l2.188-.5z" style="marker:none"/><path style="marker:none" d="M75.688 225.063l1.25 1.937H102l-4.406-4.406-1.938 2.562zM90.125 228.125c0 8.528 9.563 15.875 9.563 15.875l2.437-3.875S91.5 235.003 91.5 228.437zM92.25 218.563c1.303 1.202 3.065 2.176 3.125 4l2.5-1.875c-1.005-1.483-2.727-2.071-4.375-2.75z"/></g><path style="marker:none" d="M72 184c-4.432 0-8 3.568-8 8v78c0 4.432 3.568 8 8 8h2c-4.432 0-9-3.568-9-8v-78c0-4.432 4.568-8 9-8z" fill="#fbf5a1"/><path d="M56 184c4.432 0 8 3.568 8 8v78c0 4.432-3.568 8-8 8h-2c4.432 0 9-3.568 9-8v-78c0-4.432-4.568-8-9-8z" style="marker:none" fill="#f7d782" fill-opacity=".95"/></g></svg>
\ No newline at end of file
diff --git a/help/C/index.page b/help/C/index.page
index ed5d124..de56520 100644
--- a/help/C/index.page
+++ b/help/C/index.page
@@ -5,7 +5,7 @@
   style="2column">
 
   <info>
-    <title type="link" role="trail"><media type="image" its:translate="no" src="figures/logo.png"/></title>
+    <title type="link" role="trail">Mahjongg</title>
     <title type="link">Mahjongg</title>
     <title type="text">Mahjongg</title>
     <desc>GNOME Mahjongg help.</desc>
@@ -19,7 +19,7 @@
     </license>
   </info>
 
- <title><media type="image" its:translate="no" src="figures/logo32.png">Mahjongg logo</media> Mahjongg</title>
+ <title><media type="image" its:translate="no" width="48px" height="48px" src="figures/org.gnome.Mahjongg.svg"/> Mahjongg</title>
   <p>
   <app>Mahjongg</app> is a simple pattern recognition game. You score points by matching identical tiles.
   </p>
diff --git a/snap/snapcraft.yaml b/snap/snapcraft.yaml
index 7c71295..35505be 100644
--- a/snap/snapcraft.yaml
+++ b/snap/snapcraft.yaml
@@ -43,7 +43,7 @@ parts:
       cp ../src/data/icons/hicolor/scalable/org.gnome.Mahjongg.svg $SNAPCRAFT_PART_INSTALL/meta/gui/
       cp ../install/snap/gnome-mahjongg/current/usr/share/applications/org.gnome.Mahjongg.desktop $SNAPCRAFT_PART_INSTALL/meta/gui/
     plugin: meson
-    meson-parameters: [--prefix=/snap/gnome-mahjongg/current/usr]
+    meson-parameters: [--prefix=/snap/gnome-mahjongg/current/usr, -Dcompile-schemas=disabled, -Dupdate-icon-cache=disabled]
     organize:
       snap/gnome-mahjongg/current/usr: usr
     build-packages:
diff --git a/src/game-view.vala b/src/game-view.vala
index 91e8582..bc4f0c4 100644
--- a/src/game-view.vala
+++ b/src/game-view.vala
@@ -29,6 +29,11 @@ public class GameView : Gtk.DrawingArea
     private Rsvg.Handle? theme_handle = null;
     private Cairo.Pattern? tile_pattern = null;
 
+    private uint   theme_resize_timer;
+    private uint   theme_timer_id;
+
+    private Gtk.GestureClick click_controller;     // for keeping in memory
+
     private Game? _game;
     public Game? game
     {
@@ -49,46 +54,110 @@ public class GameView : Gtk.DrawingArea
         get { return _theme; }
         set {
             _theme = value;
+
+            Gdk.Pixbuf? pixbuf = null;
+            theme_handle = null;
+            tile_pattern = null;
+
             try {
                 theme_handle = new Rsvg.Handle.from_file (value);
-                theme_width  = theme_handle.width;
-                theme_height  = theme_handle.height;
+
+                double width, height;
+                theme_handle.get_intrinsic_size_in_pixels (out width, out height);
+
+                theme_width = (int)width;
+                theme_height = (int)height;
             } catch (Error e) {
-                theme_handle = null;
-                Gdk.Pixbuf.get_file_info (theme, out theme_width, out theme_height);
+                try {
+                    pixbuf = new Gdk.Pixbuf.from_file (theme);
+                    theme_width  = pixbuf.get_width ();
+                    theme_height  = pixbuf.get_height ();
+                } catch (Error e) {
+                    warning ("Could not load theme %s: %s", value, e.message);
+                }
             }
+
             theme_aspect = ((double) theme_height / 2) / ((double) theme_width / 43);
             update_dimensions ();
-            tile_pattern = null;
+
+            if (pixbuf != null) {
+                var theme_surface = get_native ().get_surface ().create_similar_surface (Cairo.Content.COLOR_ALPHA, theme_width, theme_height);
+                var ctx = new Cairo.Context (theme_surface);
+                Gdk.cairo_set_source_pixbuf (ctx, pixbuf, 0, 0);
+                ctx.paint();
+                tile_pattern = new Cairo.Pattern.for_surface (theme_surface);
+            }
+
+            if (theme_handle != null) {
+                resize_theme ();
+            }
+
             queue_draw ();
         }
     }
 
-    public void build_pattern () {
-        if (theme_handle == null)
-            return;  // Only rebuild if SVG
+    construct
+    {
+        can_focus = true;
+        theme_timer_id = 0;
+        init_mouse ();
+        set_draw_func (draw_func);
+    }
 
-        /* We want to check if the existing pattern is large enough
-         * for the current widget size */
-        var a_width = get_allocated_width();
+    public override void size_allocate (int width, int height, int baseline) {
+        update_dimensions ();
 
-        if (tile_pattern != null && theme_handle != null) {
-            Cairo.Surface? surface;
-            tile_pattern.get_surface(out surface);
+        /* Resize the rsvg theme lazily after 300ms of the last resize event */
+        if (theme_timer_id != 0) {
+            GLib.Source.remove(theme_timer_id);
+            theme_timer_id = 0;
+        }
 
-            if (surface != null) {
-                var w = ((Cairo.ImageSurface)surface).get_width();
-            }
+        if (theme_handle != null) {
+            theme_resize_timer = 2;
+            theme_timer_id = GLib.Timeout.add(100, () => {
+                if (theme_resize_timer == 0) {
+                    resize_theme ();
+                    theme_timer_id = 0;
+                    return false;
+                }
+
+                theme_resize_timer--;
+                return true;
+            });
         }
     }
 
-    public GameView ()
-    {
-        can_focus = true;
-        add_events (Gdk.EventMask.BUTTON_PRESS_MASK | Gdk.EventMask.BUTTON_RELEASE_MASK);
-        size_allocate.connect(() => {
-            update_dimensions ();
-        });
+    private void resize_theme () {
+        if (theme_handle == null)
+            return;
+
+        var rendered_theme_width = (tile_width + tile_layer_offset_x) * 43;
+
+
+        if (theme_width >= rendered_theme_width) {
+            double width, height;
+            theme_handle.get_intrinsic_size_in_pixels (out width, out height);
+            theme_width = (int) width;
+            theme_height = (int) height;
+        }
+
+
+        while (theme_width < rendered_theme_width) {
+            theme_width += theme_width;
+            theme_height += theme_height;
+        }
+
+        var theme_surface = get_native ().get_surface ().create_similar_surface (Cairo.Content.COLOR_ALPHA, theme_width, theme_height);
+        var ctx = new Cairo.Context (theme_surface);
+
+        try {
+            theme_handle.render_document(ctx, {0,0,theme_width,theme_height});
+            tile_pattern = new Cairo.Pattern.for_surface (theme_surface);
+            queue_draw();
+        } catch (Error e) {
+            warning ("Could not upscale theme");
+        }
     }
 
     public void set_background (string? colour)
@@ -105,27 +174,8 @@ public class GameView : Gtk.DrawingArea
             return;
 
         /* The images are bigger than the tile as they contain the isometric extension in the z-axis */
-        var image_width = tile_width + tile_layer_offset_x;
-        var image_height = tile_height + tile_layer_offset_y;
-
-        /* Render the tiles */
-        if (!render_indexes && (tile_pattern == null || tile_pattern_width != image_width || tile_pattern_height != image_height))
-        {
-            tile_pattern_width = image_width;
-            tile_pattern_height = image_height;
-
-            var width = image_width * 43;
-            var height = image_height * 2;
-
-            var surface = new Cairo.Surface.similar (cr.get_target (), Cairo.Content.COLOR_ALPHA, width, height);
-            var c = new Cairo.Context (surface);
-            load_theme (c, width, height);
-            tile_pattern = new Cairo.Pattern.for_surface (surface);
-        }
-
-        /* This works because of the way the tiles are sorted. We could
-         * reverse them to make this look a little nicer, but when searching
-         * for a tile we want it the other way around. */
+        tile_pattern_width = tile_width + tile_layer_offset_x;
+        tile_pattern_height = tile_height + tile_layer_offset_y;
 
         foreach (var tile in game.tiles)
         {
@@ -135,29 +185,34 @@ public class GameView : Gtk.DrawingArea
             int x, y;
             get_tile_position (tile, out x, out y);
 
-            /* Select image for this tile, or blank image if paused */
-            var texture_x = get_image_offset (tile.number) * image_width;
-            var texture_y = 0;
-            if (game.paused)
-            {
-                texture_x = get_image_offset (-1) * image_width;
-                texture_y = 0;
-            }
-            else if (tile == game.selected_tile)
-                texture_y = image_height;
-            else if (game.hint_blink_counter % 2 == 1 && (tile == game.hint_tiles[0] || tile == game.hint_tiles[1]))
-                texture_y = image_height;
-
             if (render_indexes)
                 cr.set_source_rgb (tile.number / 255.0, tile.number / 255.0, tile.number / 255.0);
             else
             {
+                double width_scale = (double)theme_width / ((double)tile_pattern_width * 43.0);
+                double height_scale = (double)theme_height / ((double)tile_pattern_height * 2);
+
+                var tile_number = game.paused ? -1 : tile.number;
+
+                /* Select image for this tile, or blank image if paused */
+                double texture_x = (double)get_image_offset (tile_number) * tile_pattern_width;
+                double texture_y = 0;
+
+                if (!game.paused) {
+                    if ((tile == game.selected_tile) ||
+                        (game.hint_blink_counter % 2 == 1 && (tile == game.hint_tiles[0] || tile == game.hint_tiles[1])))
+                        texture_y = tile_pattern_height;
+                }
+
                 var matrix = Cairo.Matrix.identity ();
+
+                matrix.scale(width_scale, height_scale);
                 matrix.translate (texture_x - x, texture_y - y);
+
                 tile_pattern.set_matrix (matrix);
                 cr.set_source (tile_pattern);
             }
-            cr.rectangle (x, y, image_width, image_height);
+            cr.rectangle (x, y, tile_pattern_width, tile_pattern_height);
             cr.fill ();
         }
 
@@ -179,23 +234,6 @@ public class GameView : Gtk.DrawingArea
         }
     }
 
-    private void load_theme (Cairo.Context c, int width, int height)
-    {
-        if (theme_handle != null) {
-            var m = Cairo.Matrix.identity ();
-            m.scale ((double) width / theme_handle.width, (double) height / theme_handle.height);
-            c.set_matrix (m);
-            theme_handle.render_cairo (c);
-            return;
-        } else {
-            var p = new Gdk.Pixbuf.from_file_at_scale (theme, width, height, false);
-            Gdk.cairo_set_source_pixbuf (c, p, 0, 0);
-            c.paint ();
-            return;
-        }
-        warning ("Failed to load theme %s", theme);
-    }
-
     private void update_dimensions ()
     {
         if (theme == null)
@@ -255,9 +293,7 @@ public class GameView : Gtk.DrawingArea
     private void redraw_tile_cb (Tile tile)
     {
         update_dimensions ();
-        int x, y;
-        get_tile_position (tile, out x, out y);
-        queue_draw_area (x, y, tile_pattern_width, tile_pattern_height);
+        queue_draw ();
     }
 
     private void paused_changed_cb ()
@@ -265,64 +301,58 @@ public class GameView : Gtk.DrawingArea
         queue_draw ();
     }
 
-    public override bool draw (Cairo.Context cr)
+    public void draw_func (Gtk.DrawingArea area, Cairo.Context cr, int width, int height)
     {
         if (game == null)
-            return false;
+            return;
 
         Gdk.cairo_set_source_rgba (cr, background_color);
         cr.paint ();
         draw_game (cr);
+    }
 
-        return true;
+    private inline void init_mouse ()
+    {
+        click_controller = new Gtk.GestureClick ();    // only reacts to Gdk.BUTTON_PRIMARY
+        this.add_controller (click_controller);
+        click_controller.pressed.connect (on_click);
     }
 
-    public override bool button_press_event (Gdk.EventButton event)
+    private inline void on_click (Gtk.GestureClick _click_controller, int n_press, double event_x, double event_y)
     {
         if (game == null || game.paused)
-            return false;
-
-        /* Ignore the 2BUTTON and 3BUTTON events. */
-        if (event.type != Gdk.EventType.BUTTON_PRESS)
-            return false;
+            return;
 
         /* Get the tile under the square */
-        var tile = find_tile ((uint) event.x, (uint) event.y);
+        var tile = find_tile ((uint) event_x, (uint) event_y);
 
         /* If not a valid tile then ignore the event */
         if (tile == null || !game.tile_can_move (tile))
-            return true;
+            return;
 
-        if (event.button == 1)
+        /* Select first tile */
+        if (game.selected_tile == null)
         {
-            /* Select first tile */
-            if (game.selected_tile == null)
-            {
-                game.selected_tile = tile;
-                return true;
-            }
+            game.selected_tile = tile;
+        }
 
-            /* Unselect tile by clicking on it again */
-            if (tile == game.selected_tile)
-            {
-                game.selected_tile = null;
-                return true;
-            }
+        /* Unselect tile by clicking on it again */
+        else if (tile == game.selected_tile)
+        {
+            game.selected_tile = null;
+        }
 
-            /* Attempt to match second tile to the selected one */
-            if (game.selected_tile.matches (tile))
-            {
-                game.remove_pair (game.selected_tile, tile);
-                return true;
-            }
-            else
-            {
-                game.selected_tile = tile;
-                return true;
-            }
+        /* Attempt to match second tile to the selected one */
+        else if (game.selected_tile.matches (tile))
+        {
+            game.remove_pair (game.selected_tile, tile);
+        }
+        else
+        {
+            game.selected_tile = tile;
         }
 
-        return false;
+        queue_draw();
     }
 
     private Tile? find_tile (uint x, uint y)
diff --git a/src/gnome-mahjongg.vala b/src/gnome-mahjongg.vala
index a125c55..08a47ad 100644
--- a/src/gnome-mahjongg.vala
+++ b/src/gnome-mahjongg.vala
@@ -8,26 +8,17 @@
  * license.
  */
 
-public class Mahjongg : Gtk.Application
+public class Mahjongg : Adw.Application
 {
     private Settings settings;
 
     private History history;
 
-    private List<Map> maps = null;
+    private List<Map> maps = new List<Map> ();
 
-    private Gtk.ApplicationWindow window;
-    private Gtk.Label title;
-    private int window_width;
-    private int window_height;
-    private bool is_maximized;
-    private bool is_tiled;
+    private MahjonggWindow window;
 
     private GameView game_view;
-    private Gtk.Button pause_button;
-    private Gtk.Label moves_label;
-    private Gtk.Label clock_label;
-    private Gtk.Dialog? preferences_dialog = null;
 
     private const OptionEntry[] option_entries =
     {
@@ -62,149 +53,32 @@ public class Mahjongg : Gtk.Application
         base.startup ();
 
         add_action_entries (action_entries, this);
-        set_accels_for_action ("app.new-game", {"<Primary>n"});
-        set_accels_for_action ("app.pause", {"Pause"});
-        set_accels_for_action ("app.hint", {"<Primary>h"});
-        set_accels_for_action ("app.undo", {"<Primary>z"});
-        set_accels_for_action ("app.redo", {"<Primary><Shift>z"});
-        set_accels_for_action ("app.help", {"F1"});
-        set_accels_for_action ("app.quit", {"<Primary>q", "<Primary>w"});
+        set_accels_for_action ("app.new-game",  {        "<Primary>n"       });
+        set_accels_for_action ("app.pause",     {        "<Primary>p",
+                                                                  "Pause"   });
+        set_accels_for_action ("app.hint",      {        "<Primary>h"       });
+        set_accels_for_action ("app.undo",      {        "<Primary>z"       });
+        set_accels_for_action ("app.redo",      { "<Shift><Primary>z"       });
+        set_accels_for_action ("app.help",      {                 "F1"      });
+        set_accels_for_action ("app.quit",      {        "<Primary>q",
+                                                         "<Primary>w"       });
 
         settings = new Settings ("org.gnome.Mahjongg");
-
         load_maps ();
 
         history = new History (Path.build_filename (Environment.get_user_data_dir (), "gnome-mahjongg", "history"));
         history.load ();
 
-        window = new Gtk.ApplicationWindow (this);
-        window.size_allocate.connect (size_allocate_cb);
-        window.window_state_event.connect (window_state_event_cb);
-        window.set_default_size (settings.get_int ("window-width"), settings.get_int ("window-height"));
-        if (settings.get_boolean ("window-is-maximized"))
-            window.maximize ();
-
-        var status_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 10);
-
-        var group_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 0);
-        var label = new Gtk.Label (_("Moves Left:"));
-        group_box.pack_start (label, false, false, 0);
-        var spacer = new Gtk.Label (" ");
-        group_box.pack_start (spacer, false, false, 0);
-        moves_label = new Gtk.Label ("");
-        group_box.pack_start (moves_label, false, false, 0);
-        status_box.pack_start (group_box, false, false, 0);
-
-        clock_label = new Gtk.Label ("");
-        status_box.pack_start (clock_label, false, false, 0);
-
-        var vbox = new Gtk.Box (Gtk.Orientation.VERTICAL, 0);
-
         game_view = new GameView ();
-        game_view.button_press_event.connect (view_button_press_event);
-        game_view.set_size_request (600, 400);
-
-        title = new Gtk.Label ("");
-        title.get_style_context ().add_class ("title");
-
-        var hbox = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 0);
-        hbox.get_style_context ().add_class ("linked");
-
-        var undo_button = new Gtk.Button.from_icon_name ("edit-undo-symbolic", Gtk.IconSize.BUTTON);
-        undo_button.valign = Gtk.Align.CENTER;
-        undo_button.action_name = "app.undo";
-        undo_button.set_tooltip_text (_("Undo your last move"));
-        hbox.pack_start (undo_button);
-
-        var redo_button = new Gtk.Button.from_icon_name ("edit-redo-symbolic", Gtk.IconSize.BUTTON);
-        redo_button.valign = Gtk.Align.CENTER;
-        redo_button.action_name = "app.redo";
-        redo_button.set_tooltip_text (_("Redo your last move"));
-        hbox.pack_start (redo_button);
-
-        var hint_button = new Gtk.Button.from_icon_name ("dialog-question-symbolic", Gtk.IconSize.BUTTON);
-        hint_button.valign = Gtk.Align.CENTER;
-        hint_button.action_name = "app.hint";
-        hint_button.set_tooltip_text (_("Receive a hint for your next move"));
-
-        pause_button = new Gtk.Button.from_icon_name ("media-playback-pause-symbolic", Gtk.IconSize.BUTTON);
-        pause_button.valign = Gtk.Align.CENTER;
-        pause_button.action_name = "app.pause";
-        pause_button.set_tooltip_text (_("Pause the game"));
-
-        var title_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 2);
-        title_box.pack_start (title, false, false, 0);
-        status_box.halign = Gtk.Align.CENTER;
-        title_box.pack_start (status_box, false, false, 0);
-
-        var menu = new Menu ();
-        var mahjongg_menu = new Menu ();
-        menu.append_section (null, mahjongg_menu);
-        mahjongg_menu.append (_("_New Game"), "app.new-game");
-        mahjongg_menu.append (_("_Restart Game"), "app.restart-game");
-        mahjongg_menu.append (_("_Scores"), "app.scores");
-        var help_menu = new Menu ();
-        menu.append_section (null, help_menu);
-        help_menu.append (_("_Preferences"), "app.preferences");
-        help_menu.append (_("_Keyboard Shortcuts"), "win.show-help-overlay");
-        help_menu.append (_("_Help"), "app.help");
-        help_menu.append (_("_About Mahjongg"), "app.about");
-
-        var menu_button = new Gtk.MenuButton ();
-        menu_button.valign = Gtk.Align.CENTER;
-        menu_button.set_menu_model (menu);
-        menu_button.set_image (new Gtk.Image.from_icon_name ("open-menu-symbolic", Gtk.IconSize.BUTTON));
-
-        var header_bar = new Gtk.HeaderBar ();
-        header_bar.set_custom_title (title_box);
-        header_bar.set_show_close_button (true);
-        header_bar.pack_start (hbox);
-        header_bar.pack_end (menu_button);
-        header_bar.pack_end (hint_button);
-        header_bar.pack_end (pause_button);
-        window.set_titlebar (header_bar);
-
-        vbox.pack_start (game_view, true, true, 0);
-
-        window.add (vbox);
-        window.show_all ();
+        view_click_controller = new Gtk.GestureClick ();
+        view_click_controller.pressed.connect (on_click);
+        game_view.add_controller (view_click_controller);
 
-        settings.changed.connect (conf_value_changed_cb);
-
-        new_game ();
-
-        game_view.grab_focus ();
-
-        conf_value_changed_cb (settings, "tileset");
-        conf_value_changed_cb (settings, "bgcolour");
-        tick_cb ();
-    }
-
-    private void size_allocate_cb (Gtk.Allocation allocation)
-    {
-        if (is_maximized || is_tiled)
-            return;
-        window.get_size (out window_width, out window_height);
-    }
-
-    private bool window_state_event_cb (Gdk.EventWindowState event)
-    {
-        if ((event.changed_mask & Gdk.WindowState.MAXIMIZED) != 0)
-            is_maximized = (event.new_window_state & Gdk.WindowState.MAXIMIZED) != 0;
-        /* We don’t save this state, but track it for saving size allocation */
-        if ((event.changed_mask & Gdk.WindowState.TILED) != 0)
-            is_tiled = (event.new_window_state & Gdk.WindowState.TILED) != 0;
-        return false;
-    }
-
-    protected override void shutdown ()
-    {
-        base.shutdown ();
+        window = new MahjonggWindow (this, game_view);
 
-        /* Save window state */
-        settings.set_int ("window-width", window_width);
-        settings.set_int ("window-height", window_height);
-        settings.set_boolean ("window-is-maximized", is_maximized);
+        settings.bind("window-width", window, "default-width", SettingsBindFlags.DEFAULT);
+        settings.bind("window-height", window, "default-height", SettingsBindFlags.DEFAULT);
+        settings.bind("window-is-maximized", window, "maximized", SettingsBindFlags.DEFAULT);
     }
 
     protected override int handle_local_options (GLib.VariantDict options)
@@ -223,6 +97,16 @@ public class Mahjongg : Gtk.Application
     public override void activate ()
     {
         window.present ();
+
+        settings.changed.connect (conf_value_changed_cb);
+
+        new_game ();
+
+        game_view.grab_focus ();
+
+        conf_value_changed_cb (settings, "tileset");
+        conf_value_changed_cb (settings, "bgcolour");
+        tick_cb ();
     }
 
     private void update_ui ()
@@ -246,17 +130,6 @@ public class Mahjongg : Gtk.Application
             undo_action.set_enabled (game_view.game.can_undo);
             redo_action.set_enabled (game_view.game.can_redo);
         }
-
-        moves_label.set_text ("%2u".printf (game_view.game.moves_left));
-    }
-
-    private void theme_changed_cb (Gtk.ComboBox widget)
-    {
-        Gtk.TreeIter iter;
-        widget.get_active_iter (out iter);
-        string theme;
-        widget.model.get (iter, 1, out theme);
-        settings.set_string ("tileset", theme);
     }
 
     private void conf_value_changed_cb (Settings settings, string key)
@@ -285,37 +158,24 @@ public class Mahjongg : Gtk.Application
                                     _("Use _new map"), Gtk.ResponseType.ACCEPT,
                                     null);
                 dialog.set_default_response (Gtk.ResponseType.ACCEPT);
-                var response = dialog.run ();
-                if (response == Gtk.ResponseType.ACCEPT)
-                    new_game ();
-                dialog.destroy ();
+                dialog.response.connect ( (resp_id) => {
+                    if (resp_id == Gtk.ResponseType.ACCEPT)
+                        new_game ();
+                    dialog.destroy ();
+                });
+                dialog.show ();
             }
             else
                 new_game ();
         }
     }
 
-    private bool view_button_press_event (Gtk.Widget widget, Gdk.EventButton event)
+    private Gtk.GestureClick view_click_controller;    // for keeping in memory
+    private inline void on_click (Gtk.GestureClick _view_click_controller, int n_press, double event_x, double event_y)
     {
         /* Cancel pause on click */
         if (game_view.game.paused)
-        {
             pause_cb ();
-            return true;
-        }
-
-        return false;
-    }
-
-    private void background_changed_cb (Gtk.ColorButton widget)
-    {
-        var colour = widget.get_rgba ();
-        settings.set_string ("bgcolour", "#%04x%04x%04x".printf ((int) (colour.red * 65536 + 0.5), (int) (colour.green * 65536 + 0.5), (int) (colour.blue * 65536 + 0.5)));
-    }
-
-    private void map_changed_cb (Gtk.ComboBox widget)
-    {
-        settings.set_string ("mapset", maps.nth_data (widget.active).name);
     }
 
     enum NoMovesDialogResponse
@@ -337,11 +197,7 @@ public class Mahjongg : Gtk.Application
             var entry = new HistoryEntry (date, game_view.game.map.score_name, duration);
             history.add (entry);
             history.save ();
-
-            if (show_scores (entry, true) == Gtk.ResponseType.CLOSE)
-                window.destroy ();
-            else
-                new_game ();
+            show_scores (entry, true);
         }
         else if (!game_view.game.can_move)
         {
@@ -359,149 +215,58 @@ public class Mahjongg : Gtk.Application
                                 _("_New game"), NoMovesDialogResponse.NEW_GAME,
                                 allow_shuffle ? _("_Shuffle") : null, NoMovesDialogResponse.SHUFFLE);
 
-            var result = dialog.run ();
-            /* Shuffling may cause the dialog to appear again immediately,
-               so we destroy BEFORE doing anything with the result. */
-            dialog.destroy ();
-
-            switch (result)
-            {
-            case NoMovesDialogResponse.UNDO:
-                undo_cb ();
-                break;
-            case NoMovesDialogResponse.SHUFFLE:
-                shuffle_cb ();
-                break;
-            case NoMovesDialogResponse.RESTART:
-                restart_game ();
-                break;
-            case NoMovesDialogResponse.NEW_GAME:
-                new_game ();
-                break;
-            case Gtk.ResponseType.DELETE_EVENT:
-                break;
-            default:
-                assert_not_reached ();
-            }
+            dialog.response.connect ( (resp_id) => {
+                /* Shuffling may cause the dialog to appear again immediately,
+                   so we destroy BEFORE doing anything with the result. */
+                switch (resp_id)
+                {
+                case NoMovesDialogResponse.UNDO:
+                    undo_cb ();
+                    break;
+                case NoMovesDialogResponse.SHUFFLE:
+                    shuffle_cb ();
+                    break;
+                case NoMovesDialogResponse.RESTART:
+                    restart_game ();
+                    break;
+                case NoMovesDialogResponse.NEW_GAME:
+                    new_game ();
+                    break;
+                case Gtk.ResponseType.DELETE_EVENT:
+                    break;
+                default:
+                    assert_not_reached ();
+                }
+                dialog.destroy ();
+            });
+            dialog.show ();
         }
     }
 
-    private int show_scores (HistoryEntry? selected_entry = null, bool show_quit = false)
+    private void show_scores (HistoryEntry? selected_entry = null, bool show_quit = false)
     {
-        var dialog = new ScoreDialog (history, selected_entry, show_quit);
+        var dialog = new ScoreDialog (history, selected_entry, show_quit, maps);
         dialog.modal = true;
         dialog.transient_for = window;
+        dialog.response.connect ((resp_id) => {
+            if (resp_id == Gtk.ResponseType.CLOSE)
+                window.destroy ();
+            else if (resp_id == Gtk.ResponseType.OK)
+                new_game ();
+            dialog.destroy ();
+        });
 
-        var result = dialog.run ();
-        dialog.destroy ();
-
-        return result;
+        dialog.show ();
     }
 
     private void preferences_cb ()
     {
-        if (preferences_dialog != null)
-        {
-            preferences_dialog.present ();
-            return;
-        }
-
-        bool dialogs_use_header;
-        Gtk.Settings.get_default ().get ("gtk-dialogs-use-header", out dialogs_use_header);
-
-        preferences_dialog = new Gtk.Dialog.with_buttons (_("Preferences"),
-                                                          window,
-                                                          dialogs_use_header ? Gtk.DialogFlags.USE_HEADER_BAR : 0,
-                                                          null);
-        preferences_dialog.set_border_width (5);
-        var dialog_content_area = (Gtk.Box) preferences_dialog.get_content_area ();
-        dialog_content_area.set_spacing (2);
-        preferences_dialog.set_resizable (false);
-        preferences_dialog.set_default_response (Gtk.ResponseType.CLOSE);
-        preferences_dialog.response.connect (preferences_dialog_response_cb);
-
-        var grid = new Gtk.Grid ();
-        grid.border_width = 5;
-        grid.set_row_spacing (6);
-        grid.set_column_spacing (18);
-
-        var label = new Gtk.Label.with_mnemonic (_("_Theme:"));
-        label.set_alignment (0, 0.5f);
-        grid.attach (label, 0, 0, 1, 1);
-
-        var themes = load_themes ();
-        var theme_combo = new Gtk.ComboBox ();
-        var theme_store = new Gtk.ListStore (2, typeof (string), typeof (string));
-        theme_combo.model = theme_store;
-        var renderer = new Gtk.CellRendererText ();
-        theme_combo.pack_start (renderer, true);
-        theme_combo.add_attribute (renderer, "text", 0);
-        foreach (var theme in themes)
-        {
-            var tokens = theme.split (".", -1);
-            var name = tokens[0];
-
-            Gtk.TreeIter iter;
-            theme_store.append (out iter);
-            theme_store.set (iter, 0, name, 1, theme, -1);
-
-            if (theme == settings.get_string ("tileset"))
-                theme_combo.set_active_iter (iter);
-        }
-        theme_combo.changed.connect (theme_changed_cb);
-        theme_combo.set_hexpand (true);
-        grid.attach (theme_combo, 1, 0, 1, 1);
-        label.set_mnemonic_widget (theme_combo);
-
-        label = new Gtk.Label.with_mnemonic (_("_Layout:"));
-        label.set_alignment (0, 0.5f);
-        grid.attach (label, 0, 1, 1, 1);
-
-        var map_combo = new Gtk.ComboBox ();
-        var map_store = new Gtk.ListStore (2, typeof (string), typeof (string));
-        map_combo.model = map_store;
-        renderer = new Gtk.CellRendererText ();
-        map_combo.pack_start (renderer, true);
-        map_combo.add_attribute (renderer, "text", 0);
-        foreach (var map in maps)
-        {
-            var display_name = dpgettext2 (null, "mahjongg map name", map.name);
-
-            Gtk.TreeIter iter;
-            map_store.append (out iter);
-            map_store.set (iter, 0, display_name, 1, map, -1);
-
-            if (settings.get_string ("mapset") == map.name)
-                map_combo.set_active_iter (iter);
-        }
-        map_combo.changed.connect (map_changed_cb);
-        map_combo.set_hexpand (true);
-        grid.attach (map_combo, 1, 1, 1, 1);
-        label.set_mnemonic_widget (map_combo);
-
-        label = new Gtk.Label.with_mnemonic (_("_Background color:"));
-        label.set_alignment (0, 0.5f);
-        grid.attach (label, 0, 2, 1, 1);
-
-        var widget = new Gtk.ColorButton ();
-        widget.set_rgba (game_view.background_color);
-        widget.color_set.connect (background_changed_cb);
-        widget.set_hexpand (true);
-        grid.attach (widget, 1, 2, 1, 1);
-        label.set_mnemonic_widget (widget);
-
-        dialog_content_area.pack_start (grid, true, true, 0);
-
-        if (!dialogs_use_header)
-            preferences_dialog.add_button (_("_Close"), Gtk.ResponseType.CLOSE);
-
-        preferences_dialog.show_all ();
-    }
-
-    private void preferences_dialog_response_cb (Gtk.Dialog dialog, int response)
-    {
-        preferences_dialog.destroy ();
-        preferences_dialog = null;
+        var preferences = new PreferencesWindow (settings);
+        preferences.populate_themes (load_themes ());
+        preferences.populate_layouts (maps);
+        preferences.populate_background (game_view.background_color);
+        preferences.set_transient_for (window);
+        preferences.show();
     }
 
     private List<string> load_themes ()
@@ -568,6 +333,7 @@ public class Mahjongg : Gtk.Application
             "Philippe Chavin",
             "Callum McKenzie",
             "Robert Ancell",
+            "Günther Wagner",
             "",
             _("Maps:"),
             "Rexford Newbould",
@@ -615,16 +381,13 @@ public class Mahjongg : Gtk.Application
         game_view.game.set_hint (null, null);
         game_view.game.selected_tile = null;
 
-        var pause_image = (Gtk.Image) pause_button.image;
         if (game_view.game.paused)
         {
-            pause_image.icon_name = "media-playback-start-symbolic";
-            pause_button.set_tooltip_text (_("Unpause the game"));
+            window.pause ();
         }
         else
         {
-            pause_image.icon_name = "media-playback-pause-symbolic";
-            pause_button.set_tooltip_text (_("Pause the game"));
+            window.unpause ();
         }
 
         update_ui ();
@@ -692,8 +455,7 @@ public class Mahjongg : Gtk.Application
         game_view.game.tick.connect (tick_cb);
 
         /* Set window title */
-        var display_name = dpgettext2 (null, "mahjongg map name", game_view.game.map.name);
-        title.set_label (_(display_name));
+        window.set_map_title (game_view);
 
         update_ui ();
 
@@ -701,12 +463,12 @@ public class Mahjongg : Gtk.Application
         tick_cb ();
 
         /* Reset the pause button in case it was set to resume */
-        var pause_image = (Gtk.Image) pause_button.image;
-        pause_image.icon_name = "media-playback-pause-symbolic";
+        window.unpause ();
     }
 
     private void tick_cb ()
     {
+        string clock;
         var elapsed = 0;
         if (game_view.game != null)
             elapsed = (int) (game_view.game.elapsed + 0.5);
@@ -714,21 +476,16 @@ public class Mahjongg : Gtk.Application
         var minutes = (elapsed - hours * 3600) / 60;
         var seconds = elapsed - hours * 3600 - minutes * 60;
         if (hours > 0)
-            clock_label.set_text ("%02d∶\xE2\x80\x8E%02d∶\xE2\x80\x8E%02d".printf (hours, minutes, seconds));
+            clock = "%02d∶\xE2\x80\x8E%02d∶\xE2\x80\x8E%02d".printf (hours, minutes, seconds);
         else
-            clock_label.set_text ("%02d∶\xE2\x80\x8E%02d".printf (minutes, seconds));
+            clock = "%02d∶\xE2\x80\x8E%02d".printf (minutes, seconds);
+
+        window.set_subtitle (game_view, clock);
     }
 
     private void help_cb ()
     {
-        try
-        {
-            Gtk.show_uri (window.get_screen (), "help:gnome-mahjongg", Gtk.get_current_event_time ());
-        }
-        catch (Error e)
-        {
-            warning ("Failed to show help: %s", e.message);
-        }
+        Gtk.show_uri (window, "help:gnome-mahjongg", Gdk.CURRENT_TIME);
     }
 
     private void load_maps ()
@@ -782,6 +539,7 @@ public class Mahjongg : Gtk.Application
         Environment.set_application_name (_("Mahjongg"));
         Gtk.Window.set_default_icon_name ("org.gnome.Mahjongg");
 
+        typeof(GameView).ensure();
         var app = new Mahjongg ();
         var result = app.run (args);
 
diff --git a/src/history.vala b/src/history.vala
index 1146f01..1e32235 100644
--- a/src/history.vala
+++ b/src/history.vala
@@ -92,8 +92,15 @@ public class History : Object
         var minute = int.parse (date.substring (14, 2));
         var seconds = int.parse (date.substring (17, 2));
         var timezone = date.substring (19);
-
-        return new DateTime (new TimeZone (timezone), year, month, day, hour, minute, seconds);
+        try
+        {
+            var tz = new TimeZone.identifier (timezone);
+            return new DateTime (tz, year, month, day, hour, minute, seconds);
+        }
+        catch (Error e)
+        {
+            return null;
+        }
     }
 }
 
diff --git a/src/preferences.vala b/src/preferences.vala
new file mode 100644
index 0000000..ae05406
--- /dev/null
+++ b/src/preferences.vala
@@ -0,0 +1,91 @@
+[GtkTemplate (ui = "/org/gnome/Mahjongg/ui/preferences.ui")]
+public class PreferencesWindow : Adw.PreferencesWindow {
+
+    [GtkChild]
+    private unowned Adw.ComboRow themes_row;
+
+    [GtkChild]
+    private unowned Adw.ComboRow layout_row;
+
+    [GtkChild]
+    private unowned Gtk.ColorButton background_btn;
+
+    private Settings settings;
+
+    public PreferencesWindow (Settings settings) {
+        this.settings = settings;
+        themes_row.set_expression (new Gtk.PropertyExpression (typeof (ThemeItem), null, "name"));
+    }
+
+    public void populate_themes (List<string> themes)
+    {
+        var model = new ListStore(typeof(ThemeItem));
+        foreach (var theme in themes)
+        {
+            model.append (new ThemeItem (theme));
+        }
+
+        themes_row.set_model (model);
+        for (int i = 0; i < model.get_n_items(); i++)
+        {
+            if (settings.get_string ("tileset") == ((ThemeItem)model.get_item (i)).filename)
+            {
+                themes_row.set_selected (i);
+                break;
+            }
+        }
+
+        themes_row.notify["selected"].connect ( (s, p) => {
+            var thememodel = themes_row.model as ListModel;
+            var theme = ((ThemeItem)thememodel.get_item (themes_row.selected)).filename;
+            settings.set_string ("tileset", theme);
+        });
+    }
+
+    public void populate_layouts (List<Map> layouts)
+    {
+        var model = new Gtk.StringList(null);
+        foreach (var map in layouts)
+        {
+            var display_name = dpgettext2 (null, "mahjongg map name", map.name);
+            model.append (display_name);
+        }
+        layout_row.set_model (model);
+
+        for (int i = 0; i < model.get_n_items(); i++)
+        {
+            if (settings.get_string ("mapset") == model.get_string (i))
+            {
+                layout_row.set_selected (i);
+                break;
+            }
+        }
+
+        layout_row.notify["selected"].connect ( (s, p) => {
+            var layoutmodel = layout_row.model as Gtk.StringList;
+            var layout = layoutmodel.get_string (layout_row.selected);
+            settings.set_string ("mapset", layout);
+        });
+    }
+
+    public void populate_background (Gdk.RGBA background_color)
+    {
+        background_btn.set_rgba (background_color);
+        background_btn.color_set.connect ( () => {
+            var colour = background_btn.get_rgba ();
+            settings.set_string ("bgcolour", colour.to_string ());
+        });
+    }
+}
+
+public class ThemeItem : Object {
+    public string name {get; set;}
+    public string filename {get; set;}
+
+    public ThemeItem (string filename)
+    {
+        var tokens = filename.split (".", -1);
+        this.name = tokens[0];
+        this.filename = filename;
+    }
+}
diff --git a/src/score-dialog.vala b/src/score-dialog.vala
index 82662cf..4777f68 100644
--- a/src/score-dialog.vala
+++ b/src/score-dialog.vala
@@ -8,21 +8,36 @@
  * license.
  */
 
+[GtkTemplate (ui = "/org/gnome/Mahjongg/ui/score-dialog.ui")]
 public class ScoreDialog : Gtk.Dialog
 {
+    [GtkChild]
+    private unowned Gtk.ComboBox layouts;
+
+    [GtkChild]
+    private unowned Gtk.TreeView scores;
+
     private History history;
     private HistoryEntry? selected_entry = null;
     private Gtk.ListStore size_model;
     private Gtk.ListStore score_model;
-    private Gtk.ComboBox size_combo;
-    private Gtk.TreeView scores;
+    private unowned List<Map> maps;
 
-    public ScoreDialog (History history, HistoryEntry? selected_entry = null, bool show_quit = false)
+    public ScoreDialog (History history, HistoryEntry? selected_entry = null, bool show_quit = false, List<Map> maps)
     {
+        Object(use_header_bar: 1);
+        this.maps = maps;
         this.history = history;
         history.entry_added.connect (entry_added_cb);
         this.selected_entry = selected_entry;
 
+        size_model = new Gtk.ListStore (2, typeof (string), typeof (string));
+        layouts.changed.connect (size_changed_cb);
+        layouts.model = size_model;
+        var renderer = new Gtk.CellRendererText ();
+        layouts.pack_start (renderer, true);
+        layouts.add_attribute (renderer, "text", 0);
+
         if (show_quit)
         {
             add_button (_("_Quit"), Gtk.ResponseType.CLOSE);
@@ -32,47 +47,14 @@ public class ScoreDialog : Gtk.Dialog
             add_button (_("OK"), Gtk.ResponseType.DELETE_EVENT);
         set_size_request (200, 300);
 
-        var vbox = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
-        vbox.border_width = 6;
-        vbox.show ();
-        get_content_area ().pack_start (vbox, true, true, 0);
-
-        var hbox = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6);
-        hbox.show ();
-        vbox.pack_start (hbox, false, false, 0);
-
-        var label = new Gtk.Label (_("Layout:"));
-        label.show ();
-        hbox.pack_start (label, false, false, 0);
-
-        size_model = new Gtk.ListStore (2, typeof (string), typeof (string));
-
-        size_combo = new Gtk.ComboBox ();
-        size_combo.changed.connect (size_changed_cb);
-        size_combo.model = size_model;
-        var renderer = new Gtk.CellRendererText ();
-        size_combo.pack_start (renderer, true);
-        size_combo.add_attribute (renderer, "text", 0);
-        size_combo.show ();
-        hbox.pack_start (size_combo, true, true, 0);
-
-        var scroll = new Gtk.ScrolledWindow (null, null);
-        scroll.shadow_type = Gtk.ShadowType.ETCHED_IN;
-        scroll.set_policy (Gtk.PolicyType.NEVER, Gtk.PolicyType.AUTOMATIC);
-        scroll.show ();
-        vbox.pack_start (scroll, true, true, 0);
-
         score_model = new Gtk.ListStore (3, typeof (string), typeof (string), typeof (int));
 
-        scores = new Gtk.TreeView ();
         renderer = new Gtk.CellRendererText ();
         scores.insert_column_with_attributes (-1, _("Date"), renderer, "text", 0, "weight", 2);
         renderer = new Gtk.CellRendererText ();
         renderer.xalign = 1.0f;
         scores.insert_column_with_attributes (-1, _("Time"), renderer, "text", 1, "weight", 2);
         scores.model = score_model;
-        scores.show ();
-        scroll.add (scores);
 
         foreach (var entry in history.entries)
             entry_added_cb (entry);
@@ -162,18 +144,28 @@ public class ScoreDialog : Gtk.Dialog
 
         if (!have_size_entry)
         {
-            var label = "%s".printf (entry.name);
+            unowned List<Map> map = maps.first ();
+            string display_name = entry.name;
+            do
+            {
+                if (map.data.score_name == display_name)
+                {
+                    display_name = dpgettext2 (null, "mahjongg map name", map.data.name);
+                    break;
+                }
+            }
+            while ((map = map.next) != null);
 
             size_model.append (out iter);
-            size_model.set (iter, 0, label, 1, entry.name);
+            size_model.set (iter, 0, display_name, 1, entry.name);
 
             /* Select this entry if don't have any */
-            if (size_combo.get_active () == -1)
-                size_combo.set_active_iter (iter);
+            if (layouts.get_active () == -1)
+                layouts.set_active_iter (iter);
 
             /* Select this entry if the same category as the selected one */
             if (selected_entry != null && entry.name == selected_entry.name)
-                size_combo.set_active_iter (iter);
+                layouts.set_active_iter (iter);
         }
     }
 }
diff --git a/src/window.vala b/src/window.vala
new file mode 100644
index 0000000..acf703e
--- /dev/null
+++ b/src/window.vala
@@ -0,0 +1,42 @@
+[GtkTemplate (ui = "/org/gnome/Mahjongg/ui/window.ui")]
+public class MahjonggWindow : Gtk.ApplicationWindow {
+
+    [GtkChild]
+    private unowned Adw.WindowTitle titlewidget;
+
+    [GtkChild]
+    private unowned Gtk.Button pause_btn;
+
+    public MahjonggWindow (Gtk.Application application, GameView game_view)
+    {
+        Object(application: application);
+        this.set_child (game_view);
+    }
+
+    public void set_map_title (GameView game_view)
+    {
+        var display_name = dpgettext2 (null, "mahjongg map name", game_view.game.map.name);
+        titlewidget.set_title (display_name);
+    }
+
+    public void set_subtitle (GameView game_view, string clock)
+    {
+        string moves_left = _("Moves Left:");
+        if (game_view.game.move_number != 1)
+            titlewidget.set_subtitle (("%s %2u   %s").printf (moves_left, game_view.game.moves_left, clock));
+        else
+            titlewidget.set_subtitle (("%s 0   %s").printf (moves_left, clock));
+    }
+
+    public void pause ()
+    {
+        pause_btn.icon_name = "media-playback-start-symbolic";
+        pause_btn.set_tooltip_text (_("Unpause the game"));
+    }
+
+    public void unpause ()
+    {
+        pause_btn.icon_name = "media-playback-pause-symbolic";
+        pause_btn.set_tooltip_text (_("Pause the game"));
+    }
+}
